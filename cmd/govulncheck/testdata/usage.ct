$ govulncheck -h

usage:
	govulncheck [flags] packages
	govulncheck [flags] binary

govulncheck finds vulnerabilities in Go code.

In the first form, govulncheck accepts one or more packages in the form
described by "go help packages" (for example, golang.org/x/crypto/... or ./...)
and analyzes the source code in those packages.

If there is only one argument and it is a filename, govulncheck analyzes the Go
binary in that file. Both govulncheck itself and the binary under analysis must
have been built with Go 1.18 or later.

By default, govulncheck makes requests to the Go vulnerability database
(https://vuln.go.dev). The environment variable GOVULNDB can be set to a
comma-separated list of vulnerability database URLs, with http://, https://, or
file:// protocols. Entries from multiple databases are merged.

Requests to the vulnerability database contain only module paths, not code or
other properties of your program. See https://vuln.go.dev/privacy.html for more.

For more information, visit https://go.dev/security/vulndb.

Flags:

	-v
		verbose: print a full call stack for each vulnerability.

	-json
		print vulnerability findings in JSON format.

	-tags t1,t2,...
		comma-separated list of build tags. Only valid for source code.

	-test
		analyze test files (default false). Only valid for source code.


# Same output as -h, but failure.
$ govulncheck --> FAIL 1

usage:
	govulncheck [flags] packages
	govulncheck [flags] binary

govulncheck finds vulnerabilities in Go code.

In the first form, govulncheck accepts one or more packages in the form
described by "go help packages" (for example, golang.org/x/crypto/... or ./...)
and analyzes the source code in those packages.

If there is only one argument and it is a filename, govulncheck analyzes the Go
binary in that file. Both govulncheck itself and the binary under analysis must
have been built with Go 1.18 or later.

By default, govulncheck makes requests to the Go vulnerability database
(https://vuln.go.dev). The environment variable GOVULNDB can be set to a
comma-separated list of vulnerability database URLs, with http://, https://, or
file:// protocols. Entries from multiple databases are merged.

Requests to the vulnerability database contain only module paths, not code or
other properties of your program. See https://vuln.go.dev/privacy.html for more.

For more information, visit https://go.dev/security/vulndb.

Flags:

	-v
		verbose: print a full call stack for each vulnerability.

	-json
		print vulnerability findings in JSON format.

	-tags t1,t2,...
		comma-separated list of build tags. Only valid for source code.

	-test
		analyze test files (default false). Only valid for source code.
