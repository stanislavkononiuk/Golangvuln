# Test of HTML output.

$ cdmodule novuln
$ govulncheck -html .

<!DOCTYPE html>
<html lang="en">
<meta charset="utf-8">
<title>govulncheck Results</title>
<style>
body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu,
    'Helvetica Neue', Arial, sans-serif;
}
list-style-type: none;
</style>


<body>
  
    No vulnerabilities found.
  
</body>
</html>


$ cdmodule vuln
$ govulncheck -html . --> FAIL 3

<!DOCTYPE html>
<html lang="en">
<meta charset="utf-8">
<title>govulncheck Results</title>
<style>
body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu,
    'Helvetica Neue', Arial, sans-serif;
}
list-style-type: none;
</style>


<body>
  
    <h2>GO-2021-0113</h2>
    <table>
      <tr><td>Package</td><td>golang.org/x/text/language</td></tr>
      <tr><td>Your version</td><td>v0.3.0</td></tr>
      <tr><td>Fixed version</td><td>v0.3.7</td></tr>
      <tr><td>Reference</td><td>https://pkg.go.dev/vuln/GO-2021-0113</td></tr>
      <tr><td>Description</td><td>Due to improper index calculation, an incorrectly formatted language tag can cause Parse
to panic via an out of bounds read. If Parse is used to process untrusted user inputs,
this may be used as a vector for a denial of service attack.
</td></tr>
    </table>

    
      <details>
        <summary>vuln.main calls golang.org/x/text/language.Parse</summary>
        <ul>
          
            <li>vuln.main</li>
          
            <li>golang.org/x/text/language.Parse</li>
          
        </ul>
      </details>
    
  
</body>
</html>
